{
 "Parameters": {
  "version": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "githubUrl": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "userId": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "githubToken": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "chainId": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "rpcUrl": {
   "Type": "String",
   "Default": "",
   "Description": "Version Slug"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.30.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcPrivateIsolatedSubnet1Subnet419CB160": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.4.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateIsolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateIsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet1/Subnet"
   }
  },
  "VpcPrivateIsolatedSubnet1RouteTable4D1C407D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateIsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet1/RouteTable"
   }
  },
  "VpcPrivateIsolatedSubnet1RouteTableAssociationFC5C77E3": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateIsolatedSubnet1RouteTable4D1C407D"
    },
    "SubnetId": {
     "Ref": "VpcPrivateIsolatedSubnet1Subnet419CB160"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateIsolatedSubnet2Subnet886BB83A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.30.5.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateIsolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateIsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet2/Subnet"
   }
  },
  "VpcPrivateIsolatedSubnet2RouteTable02FAA85C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc/PrivateIsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet2/RouteTable"
   }
  },
  "VpcPrivateIsolatedSubnet2RouteTableAssociation7579459F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateIsolatedSubnet2RouteTable02FAA85C"
    },
    "SubnetId": {
     "Ref": "VpcPrivateIsolatedSubnet2Subnet886BB83A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/PrivateIsolatedSubnet2/RouteTableAssociation"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/VPCGW"
   }
  },
  "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "Vpc8378EB38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/Vpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "Vpc8378EB38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "RoleVpcFlowLogs39EA31E3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "vpc-flow-logs.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/RoleVpcFlowLogs/Resource"
   }
  },
  "RoleVpcFlowLogsDefaultPolicy18B07DEA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "VpcFlowLogGroup86559C69",
         "Arn"
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "RoleVpcFlowLogs39EA31E3",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RoleVpcFlowLogsDefaultPolicy18B07DEA",
    "Roles": [
     {
      "Ref": "RoleVpcFlowLogs39EA31E3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/RoleVpcFlowLogs/DefaultPolicy/Resource"
   }
  },
  "VpcFlowLogGroup86559C69": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/VpcFlowLogGroup/Resource"
   }
  },
  "VpcFlowLogStream8BF1BE52": {
   "Type": "AWS::Logs::LogStream",
   "Properties": {
    "LogGroupName": {
     "Ref": "VpcFlowLogGroup86559C69"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/VpcFlowLogStream/Resource"
   }
  },
  "VpcFlowLogF72230C7": {
   "Type": "AWS::EC2::FlowLog",
   "Properties": {
    "DeliverLogsPermissionArn": {
     "Fn::GetAtt": [
      "RoleVpcFlowLogs39EA31E3",
      "Arn"
     ]
    },
    "LogDestinationType": "cloud-watch-logs",
    "LogGroupName": {
     "Ref": "VpcFlowLogGroup86559C69"
    },
    "ResourceId": {
     "Ref": "Vpc8378EB38"
    },
    "ResourceType": "VPC",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PonderStack/VpcFlowLog"
     }
    ],
    "TrafficType": "ALL"
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/VpcFlowLog/FlowLog"
   }
  },
  "SecurityGroupAlbD38A08FF": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "PonderStack/SecurityGroupAlb",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/SecurityGroupAlb/Resource"
   }
  },
  "Alb16C2F182": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "IpAddressType": "ipv4",
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "SecurityGroupAlbD38A08FF",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
     },
     {
      "Ref": "VpcPublicSubnet2Subnet691E08A3"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677",
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/Alb/Resource"
   }
  },
  "AlbHttpListener00C8B33E": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "FixedResponseConfig": {
       "MessageBody": "404 not found",
       "StatusCode": "404"
      },
      "Type": "fixed-response"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "Alb16C2F182"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Alb/HttpListener/Resource"
   }
  },
  "AlbHttpsListener2ADA614F": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "Alb16C2F182"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/Alb/HttpsListener/Resource"
   }
  },
  "PonderDistribution81E3280B": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
      "TargetOriginId": "PonderStackPonderDistributionOrigin1941E6A9A",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "CustomOriginConfig": {
        "OriginKeepaliveTimeout": 5,
        "OriginProtocolPolicy": "https-only",
        "OriginReadTimeout": 30,
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::GetAtt": [
         "Alb16C2F182",
         "DNSName"
        ]
       },
       "Id": "PonderStackPonderDistributionOrigin1941E6A9A"
      }
     ],
     "PriceClass": "PriceClass_All"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/PonderDistribution/Resource"
   }
  },
  "ECSExecKmsKey747494DA": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:aws:iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSExecKmsKey/Resource"
   }
  },
  "ECSExecBucket1618D101": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "ECSExecKmsKey747494DA",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSExecBucket/Resource"
   }
  },
  "DemoCluster8CB095E3": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "enabled"
     }
    ],
    "Configuration": {
     "ExecuteCommandConfiguration": {
      "KmsKeyId": {
       "Fn::GetAtt": [
        "ECSExecKmsKey747494DA",
        "Arn"
       ]
      },
      "LogConfiguration": {
       "S3BucketName": {
        "Ref": "ECSExecBucket1618D101"
       },
       "S3EncryptionEnabled": true,
       "S3KeyPrefix": "exec-command-output"
      },
      "Logging": "OVERRIDE"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/DemoCluster/Resource"
   }
  },
  "IndexedDataDbSubnetGroupDFA56301": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for IndexedDataDb database",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateSubnet1Subnet536B997A"
     },
     {
      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexedDataDb/SubnetGroup/Default"
   }
  },
  "IndexedDataDbSecurityGroup5DCD6B1B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for IndexedDataDb database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Open port for connection",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexedDataDb/SecurityGroup/Resource"
   }
  },
  "IndexedDataDbSecretD1BCA47C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexedDataDb/Secret/Resource"
   }
  },
  "IndexedDataDbSecretAttachment78C7E6AC": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "IndexedDataDbSecretD1BCA47C"
    },
    "TargetId": {
     "Ref": "IndexedDataDb0ACD9949"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexedDataDb/Secret/Attachment/Resource"
   }
  },
  "IndexedDataDb0ACD9949": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.m5.large",
    "DBSubnetGroupName": {
     "Ref": "IndexedDataDbSubnetGroupDFA56301"
    },
    "DeletionProtection": true,
    "Engine": "postgres",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "IndexedDataDbSecretD1BCA47C"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "IndexedDataDbSecretD1BCA47C"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MultiAZ": false,
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "IndexedDataDbSecurityGroup5DCD6B1B",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexedDataDb/Resource"
   }
  },
  "IndexerEcsTaskExecutionRole39BAB036": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     },
     {
      "Ref": "IndexerECSExecPolicy74E2ED71"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerEcsTaskExecutionRole/Resource"
   }
  },
  "IndexerEcsTaskExecutionRoleDefaultPolicy55033E8E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents",
        "s3:GetBucketLocation",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:GenerateDataKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecKmsKey747494DA",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "ECSExecBucket1618D101"
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetEncryptionConfiguration",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "ECSExecBucket1618D101"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IndexerEcsTaskExecutionRoleDefaultPolicy55033E8E",
    "Roles": [
     {
      "Ref": "IndexerEcsTaskExecutionRole39BAB036"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerEcsTaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "IndexerECSExecPolicy74E2ED71": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "ECSExecBucket1618D101",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetEncryptionConfiguration",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecBucket1618D101",
         "Arn"
        ]
       }
      },
      {
       "Action": "kms:Decrypt",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecKmsKey747494DA",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSExecPolicy/Resource"
   }
  },
  "IndexerECSTaskDefinitionE97A20B5": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       {
        "Fn::Join": [
         "",
         [
          "git clone https://oauth2:",
          {
           "Ref": "githubToken"
          },
          "@github.com/",
          {
           "Ref": "githubUrl"
          },
          " ponderInstance && cd ponderInstance && touch .env.local && echo \"DATABASE_URL=",
          {
           "Fn::GetAtt": [
            "IndexedDataDb0ACD9949",
            "Endpoint.Address"
           ]
          },
          ":",
          {
           "Fn::GetAtt": [
            "IndexedDataDb0ACD9949",
            "Endpoint.Port"
           ]
          },
          "\" >> .env.local && npm i && ponder start"
         ]
        ]
       }
      ],
      "EntryPoint": [
       "sh",
       "-c"
      ],
      "Environment": [
       {
        "Name": "DB_ENDPOINT",
        "Value": {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IndexedDataDb0ACD9949",
             "Endpoint.Address"
            ]
           },
           ":",
           {
            "Fn::GetAtt": [
             "IndexedDataDb0ACD9949",
             "Endpoint.Port"
            ]
           }
          ]
         ]
        }
       }
      ],
      "Essential": true,
      "Image": "timbru31/node-alpine-git:latest",
      "LinuxParameters": {
       "Capabilities": {},
       "InitProcessEnabled": true
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "IndexerContainerLogGroup3540919A"
        },
        "awslogs-stream-prefix": "ponderInstanceLogs",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "IndexerECSContainer",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "IndexerECSTaskDefinitionExecutionRole57328D76",
      "Arn"
     ]
    },
    "Family": "PonderStackIndexerECSTaskDefinition5A96A8A9",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "IndexerEcsTaskExecutionRole39BAB036",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSTaskDefinition/Resource"
   }
  },
  "IndexerECSTaskDefinitionExecutionRole57328D76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSTaskDefinition/ExecutionRole/Resource"
   }
  },
  "IndexerECSTaskDefinitionExecutionRoleDefaultPolicy21A0C20D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "IndexerContainerLogGroup3540919A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IndexerECSTaskDefinitionExecutionRoleDefaultPolicy21A0C20D",
    "Roles": [
     {
      "Ref": "IndexerECSTaskDefinitionExecutionRole57328D76"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "IndexerContainerLogGroup3540919A": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 365
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerContainerLogGroup/Resource"
   }
  },
  "IndexerECSSecurityGroup66B3BC71": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "PonderStack/IndexerECSSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "SecurityGroupAlbD38A08FF",
           "GroupId"
          ]
         },
         ":80"
        ]
       ]
      },
      "FromPort": 80,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "SecurityGroupAlbD38A08FF",
        "GroupId"
       ]
      },
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSSecurityGroup/Resource"
   }
  },
  "IndexerECSServiceD2400ACE": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "DemoCluster8CB095E3"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 100
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "IndexerECSSecurityGroup66B3BC71",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "IndexerECSTaskDefinitionE97A20B5"
    }
   },
   "DependsOn": [
    "IndexerEcsTaskExecutionRoleDefaultPolicy55033E8E",
    "IndexerEcsTaskExecutionRole39BAB036"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/IndexerECSService/Service"
   }
  },
  "EcsTaskExecutionRoleC0B6A84D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     },
     {
      "Ref": "ECSExecPolicyBB490E29"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/EcsTaskExecutionRole/Resource"
   }
  },
  "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents",
        "s3:GetBucketLocation",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:GenerateDataKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecKmsKey747494DA",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "ECSExecBucket1618D101"
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetEncryptionConfiguration",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "ECSExecBucket1618D101"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "Roles": [
     {
      "Ref": "EcsTaskExecutionRoleC0B6A84D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/EcsTaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ECSExecPolicyBB490E29": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "ECSExecBucket1618D101",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetEncryptionConfiguration",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecBucket1618D101",
         "Arn"
        ]
       }
      },
      {
       "Action": "kms:Decrypt",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ECSExecKmsKey747494DA",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSExecPolicy/Resource"
   }
  },
  "ECSTaskDefinition0FCBFB08": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       {
        "Fn::Join": [
         "",
         [
          "git clone https://oauth2:",
          {
           "Ref": "githubToken"
          },
          "@github.com/",
          {
           "Ref": "githubUrl"
          },
          " ponderInstance && cd ponderInstance && touch .env.local && echo \"DATABASE_URL=",
          {
           "Fn::GetAtt": [
            "IndexedDataDb0ACD9949",
            "Endpoint.Address"
           ]
          },
          ":",
          {
           "Fn::GetAtt": [
            "IndexedDataDb0ACD9949",
            "Endpoint.Port"
           ]
          },
          "\" >> .env.local && npm i && ponder serve"
         ]
        ]
       }
      ],
      "EntryPoint": [
       "sh",
       "-c"
      ],
      "Environment": [
       {
        "Name": "DB_ENDPOINT",
        "Value": {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "IndexedDataDb0ACD9949",
             "Endpoint.Address"
            ]
           },
           ":",
           {
            "Fn::GetAtt": [
             "IndexedDataDb0ACD9949",
             "Endpoint.Port"
            ]
           }
          ]
         ]
        }
       }
      ],
      "Essential": true,
      "Image": "timbru31/node-alpine-git:latest",
      "LinuxParameters": {
       "Capabilities": {},
       "InitProcessEnabled": true
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "ContainerLogGroupDE306E09"
        },
        "awslogs-stream-prefix": "ponderInstanceLogs",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "ECSContainer",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ECSTaskDefinitionExecutionRole6887322D",
      "Arn"
     ]
    },
    "Family": "PonderStackECSTaskDefinition326C4413",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "EcsTaskExecutionRoleC0B6A84D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSTaskDefinition/Resource"
   }
  },
  "ECSTaskDefinitionExecutionRole6887322D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSTaskDefinition/ExecutionRole/Resource"
   }
  },
  "ECSTaskDefinitionExecutionRoleDefaultPolicy424DBBB7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ContainerLogGroupDE306E09",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ECSTaskDefinitionExecutionRoleDefaultPolicy424DBBB7",
    "Roles": [
     {
      "Ref": "ECSTaskDefinitionExecutionRole6887322D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ContainerLogGroupDE306E09": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 365
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PonderStack/ContainerLogGroup/Resource"
   }
  },
  "ECSSecurityGroupA14DBE7D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "PonderStack/ECSSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "SecurityGroupAlbD38A08FF",
           "GroupId"
          ]
         },
         ":80"
        ]
       ]
      },
      "FromPort": 80,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "SecurityGroupAlbD38A08FF",
        "GroupId"
       ]
      },
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSSecurityGroup/Resource"
   }
  },
  "ECSSecurityGroupfromPonderStackSecurityGroupAlb40D1CB1B80F6492364": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ECSSecurityGroupA14DBE7D",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SecurityGroupAlbD38A08FF",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSSecurityGroup/from PonderStackSecurityGroupAlb40D1CB1B:80"
   }
  },
  "ECSService89C005CD": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "DemoCluster8CB095E3"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 100
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "EnableExecuteCommand": true,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "ECSContainer",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ECSSecurityGroupA14DBE7D",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
       },
       {
        "Ref": "VpcPublicSubnet2Subnet691E08A3"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "ECSTaskDefinition0FCBFB08"
    }
   },
   "DependsOn": [
    "AlbHttpsListener2ADA614F",
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/Service"
   }
  },
  "ECSServiceTaskCountTarget3A308FFA": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 6,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "DemoCluster8CB095E3"
       },
       "/",
       {
        "Fn::GetAtt": [
         "ECSService89C005CD",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/TaskCount/Target/Resource"
   }
  },
  "ECSServiceTaskCountTargetAutoScaleDownCPULowerPolicy5A7F93A1": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "PonderStackECSServiceTaskCountTargetAutoScaleDownCPULowerPolicyD351C2BD",
    "PolicyType": "StepScaling",
    "ScalingTargetId": {
     "Ref": "ECSServiceTaskCountTarget3A308FFA"
    },
    "StepScalingPolicyConfiguration": {
     "AdjustmentType": "ChangeInCapacity",
     "Cooldown": 120,
     "MetricAggregationType": "Average",
     "StepAdjustments": [
      {
       "MetricIntervalLowerBound": -20,
       "MetricIntervalUpperBound": 0,
       "ScalingAdjustment": -2
      },
      {
       "MetricIntervalUpperBound": -20,
       "ScalingAdjustment": -2
      }
     ]
    }
   },
   "DependsOn": [
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/TaskCount/Target/AutoScaleDownCPU/LowerPolicy/Resource"
   }
  },
  "ECSServiceTaskCountTargetAutoScaleDownCPULowerAlarmB061A5F4": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "ECSServiceTaskCountTargetAutoScaleDownCPULowerPolicy5A7F93A1"
     }
    ],
    "AlarmDescription": "Lower threshold scaling alarm",
    "ComparisonOperator": "LessThanOrEqualToThreshold",
    "DatapointsToAlarm": 5,
    "Dimensions": [
     {
      "Name": "ClusterName",
      "Value": {
       "Ref": "DemoCluster8CB095E3"
      }
     },
     {
      "Name": "ServiceName",
      "Value": {
       "Fn::GetAtt": [
        "ECSService89C005CD",
        "Name"
       ]
      }
     }
    ],
    "EvaluationPeriods": 5,
    "MetricName": "CPUUtilization",
    "Namespace": "AWS/ECS",
    "Period": 60,
    "Statistic": "Average",
    "Threshold": 60
   },
   "DependsOn": [
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/TaskCount/Target/AutoScaleDownCPU/LowerAlarm/Resource"
   }
  },
  "ECSServiceTaskCountTargetAutoScaleUpCPUUpperPolicyB8EA8FFE": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "PonderStackECSServiceTaskCountTargetAutoScaleUpCPUUpperPolicyB5AC2350",
    "PolicyType": "StepScaling",
    "ScalingTargetId": {
     "Ref": "ECSServiceTaskCountTarget3A308FFA"
    },
    "StepScalingPolicyConfiguration": {
     "AdjustmentType": "ChangeInCapacity",
     "Cooldown": 120,
     "MetricAggregationType": "Average",
     "StepAdjustments": [
      {
       "MetricIntervalLowerBound": 0,
       "MetricIntervalUpperBound": 20,
       "ScalingAdjustment": 2
      },
      {
       "MetricIntervalLowerBound": 20,
       "ScalingAdjustment": 2
      }
     ]
    }
   },
   "DependsOn": [
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/TaskCount/Target/AutoScaleUpCPU/UpperPolicy/Resource"
   }
  },
  "ECSServiceTaskCountTargetAutoScaleUpCPUUpperAlarm525E4E0F": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "ECSServiceTaskCountTargetAutoScaleUpCPUUpperPolicyB8EA8FFE"
     }
    ],
    "AlarmDescription": "Upper threshold scaling alarm",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "ClusterName",
      "Value": {
       "Ref": "DemoCluster8CB095E3"
      }
     },
     {
      "Name": "ServiceName",
      "Value": {
       "Fn::GetAtt": [
        "ECSService89C005CD",
        "Name"
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "CPUUtilization",
    "Namespace": "AWS/ECS",
    "Period": 60,
    "Statistic": "Average",
    "Threshold": 60
   },
   "DependsOn": [
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
    "EcsTaskExecutionRoleC0B6A84D"
   ],
   "Metadata": {
    "aws:cdk:path": "PonderStack/ECSService/TaskCount/Target/AutoScaleUpCPU/UpperAlarm/Resource"
   }
  },
  "TargetGroup3D7CD9B8": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 10,
    "HealthCheckPath": "/",
    "HealthCheckTimeoutSeconds": 5,
    "HealthyThresholdCount": 2,
    "Matcher": {
     "HttpCode": "200"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "30"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 3,
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/TargetGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S227bMAz9lr4rWpNhe89lLYJmgxEXfR1omXHVyFIgUskKwf8+2PKtBbYnHh4eXUielVx+W8r7O7jRQpXnhdGFjDmDOovtyWbgoUZGL+BGvyOqlYwvF9WWXrKtyEJhtMpDYZFbbkJHFxifoTA48RO3JnJKA2tnR3ELfuyzNvwCfgTGG7yLzOsrME4X7y2jtzgK0k/6bM0M6rVGy+LBuNvBVW19gDmq4DW/P3oXLt23/kvsbeWRqBEaahmPLrXSxcwZrbq3e/QTLFRYTvwHohHGVSTjwVXjUyM+uCpnj1D3bEoagQaItTIOygIMWKVtdV3JuL5cjFbd7A4Oyk1XQ59Oz/K5ThOj7TUDntWfwVfI49dmaSOUcaE8eWdZxp0m9roIw97meSPONcn4hF37T/jeCPoq4yaoc1pcQo1ARTJuTSBOHxrgM9B5hydt9XD9Z8ZZBm3Rz7iDtuHPaFISD+Cr1i7or1ol6/UwV2Ba67WXbl2w3Ahfkow7YCiAcG+J28GJZLVxGLvNnBjUOSqf2tpthpONoI6lutu9lzE5qhWmkAY7M+ko+FxpBEzrgcCOFBhtKxmnPtoT3Q0fmZzxkid1b8cZs1bDcD9I+jXfgNWrjGsDvnNjB5pGHJFc8O08A7Grp/Rk/1HKvLvqEv0GCMWaCDlnqLStGmFdifKNvlxX93L5Xd7fvZHWCx8s6xrlMcW/+DOjtpYEAAA="
   },
   "Metadata": {
    "aws:cdk:path": "PonderStack/CDKMetadata/Default"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}